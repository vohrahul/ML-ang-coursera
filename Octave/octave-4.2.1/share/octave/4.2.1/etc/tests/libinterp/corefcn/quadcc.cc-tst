## DO NOT EDIT!  Generated automatically from quadcc.cc by Make.
%!assert (quadcc (@sin, -pi, pi), 0, 1e-6)
%!assert (quadcc (inline ("sin"),- pi, pi), 0, 1e-6)
%!assert (quadcc ("sin", -pi, pi), 0, 1e-6)
%!assert (quadcc (@sin, -pi, 0), -2, 1e-6)
%!assert (quadcc (@sin, 0, pi), 2, 1e-6)
%!assert (quadcc (@(x) 1./sqrt (x), 0, 1), 2, 1e-6)
%!assert (quadcc (@(x) 1./(sqrt (x).*(x+1)), 0, Inf), pi, 1e-6)
%!assert (quadcc (@(x) exp (-x .^ 2), -Inf, Inf), sqrt (pi), 1e-6)
%!assert (quadcc (@(x) exp (-x .^ 2), -Inf, 0), sqrt (pi)/2, 1e-6)
%!function y = __nansin (x)
%!  nan_locs = [-3*pi/4, -pi/4, 0, pi/3, pi/2, pi];
%!  y = sin (x);
%!  idx = min (abs (bsxfun (@minus, x(:), nan_locs)), [], 2);
%!  y(idx < 1e-10) = NaN;
%!endfunction
%!test
%! [q, err, npoints] = quadcc ("__nansin", -pi, pi);
%! assert (q, 0, 1e-6);
%! assert (err, 0, 15*eps);
%!error (quadcc ())
%!error (quadcc (@sin))
%!error (quadcc (@sin, 0))
%!error (quadcc (@sin, ones (2), pi))
%!error (quadcc (@sin, -i, pi))
%!error (quadcc (@sin, 0, ones (2)))
%!error (quadcc (@sin, 0, i))
%!error (quadcc (@sin, 0, pi, 0))
%!error (quadcc (@sin, 0, pi, 1e-6, [ i ]))
